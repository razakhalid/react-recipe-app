{"ast":null,"code":"var _jsxFileName = \"/Users/razakhalid/Downloads/my-react-projects/counter-app/counter-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Counter from \"./Counter\";\nimport CounterHooks from \"./CounterHooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  console.log(\"Render App\");\n  const [theme, setTheme] = useState(\"red\");\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      backgroundColor: theme\n    },\n    children: [/*#__PURE__*/_jsxDEV(Counter, {\n      initialCount: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CounterHooks, {\n      initialCount: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setTheme(prevTheme => prevTheme === \"red\" ? \"blue\" : \"red\"),\n      children: \"Toggle Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UQesybEh/qj9IjwgH3HqEMo6k+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/razakhalid/Downloads/my-react-projects/counter-app/counter-app/src/App.js"],"names":["React","useState","Counter","CounterHooks","ThemeContext","createContext","App","console","log","theme","setTheme","backgroundColor","prevTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,EAArB;;AAEP,SAASC,GAAT,GAAe;AAAA;;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEU,MAAAA,eAAe,EAAEF;AAAnB,KAA9B;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,YAAY,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,OAAO,EAAE,MACPC,QAAQ,CAAEE,SAAD,IAAgBA,SAAS,KAAK,KAAd,GAAsB,MAAtB,GAA+B,KAAhD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhBQN,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Counter from \"./Counter\";\nimport CounterHooks from \"./CounterHooks\";\n\nexport const ThemeContext = React.createContext();\n\nfunction App() {\n  console.log(\"Render App\");\n  const [theme, setTheme] = useState(\"red\");\n  return (\n    <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      <Counter initialCount={0} />\n      <CounterHooks initialCount={0} />\n      <button\n        onClick={() =>\n          setTheme((prevTheme) => (prevTheme === \"red\" ? \"blue\" : \"red\"))\n        }\n      >\n        Toggle Theme\n      </button>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}