{"ast":null,"code":"var _jsxFileName = \"/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Recipe from \"./Recipe\";\nimport { Switch, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  _s();\n\n  const sampleRecipes = [];\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId);\n  console.log(recipes);\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      image: {\n        id: Date.now().toString(),\n        image: {}\n      },\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [{\n        id: Date.now().toString(),\n        name: \"\",\n        amount: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: recipeContexValue,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(RecipeList, {\n          recipes: recipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipe/:recipe\",\n        children: /*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"A/squfVYNSH4Efj0G7dX3TtlGVU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js"],"names":["React","useState","useEffect","RecipeList","RecipeEdit","Recipe","Switch","Route","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","sampleRecipes","selectedRecipeId","setSelectedRecipeId","recipes","setRecipes","selectedRecipe","find","recipe","id","console","log","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContexValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","newRecipe","Date","now","toString","image","name","servings","cookTime","instructions","ingredients","amount","newRecipes","index","findIndex","r","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Recipe from \"./Recipe\";\nimport { Switch, Route } from \"react-router\";\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  const sampleRecipes = [];\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe.id === selectedRecipeId\n  );\n  console.log(recipes);\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      image: {\n        id: Date.now().toString(),\n        image: {},\n      },\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: Date.now().toString(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContexValue}>\n      <Switch>\n        <Route path={\"/\"} exact>\n          <RecipeList recipes={recipes} />\n        </Route>\n        <Route path={\"/recipe/:recipe\"}>\n          <Recipe />\n        </Route>\n        {/* <Route path={\"/recipe/:recipe/edit\"}>\n          {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n        </Route> */}\n      </Switch>\n    </RecipeContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}