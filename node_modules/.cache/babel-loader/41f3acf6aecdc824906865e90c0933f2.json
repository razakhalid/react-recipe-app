{"ast":null,"code":"var _jsxFileName = \"/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Recipe from \"./Recipe\";\nimport { Switch, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  _s();\n\n  const sampleRecipes = []; // const [selectedRecipeId, setSelectedRecipeId] = useState();\n\n  const [recipes, setRecipes] = useState(sampleRecipes); // const selectedRecipe = recipes.find(\n  //   (recipe) => recipe.id === selectedRecipeId\n  // );\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      image: {\n        id: Date.now().toString(),\n        image: {}\n      },\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [{\n        id: Date.now().toString(),\n        name: \"\",\n        amount: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: recipeContexValue,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(RecipeList, {\n          recipes: recipes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipe/:recipe\",\n        children: /*#__PURE__*/_jsxDEV(Recipe, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recipe/:recipe/edit\",\n        children: selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n          recipe: selectedRecipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWlzeHOLqTLzoAcmjiIgqQuaAuc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js"],"names":["React","useState","useEffect","RecipeList","RecipeEdit","Recipe","Switch","Route","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","sampleRecipes","recipes","setRecipes","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContexValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","id","setSelectedRecipeId","newRecipe","Date","now","toString","image","name","servings","cookTime","instructions","ingredients","amount","recipe","newRecipes","index","findIndex","r","filter","selectedRecipe"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport Recipe from \"./Recipe\";\nimport { Switch, Route } from \"react-router\";\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  const sampleRecipes = [];\n\n  // const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  // const selectedRecipe = recipes.find(\n  //   (recipe) => recipe.id === selectedRecipeId\n  // );\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      image: {\n        id: Date.now().toString(),\n        image: {},\n      },\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: Date.now().toString(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContexValue}>\n      <Switch>\n        <Route path={\"/\"} exact>\n          <RecipeList recipes={recipes} />\n        </Route>\n        <Route path={\"/recipe/:recipe\"}>\n          <Recipe />\n        </Route>\n        <Route path={\"/recipe/:recipe/edit\"}>\n          {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n        </Route>\n      </Switch>\n    </RecipeContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}