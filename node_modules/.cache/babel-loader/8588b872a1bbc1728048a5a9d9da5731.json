{"ast":null,"code":"var _jsxFileName = \"/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  _s();\n\n  const sampleRecipes = [{\n    name: \"Recipe 1\",\n    id: 1,\n    cookTime: \"1 hr\",\n    servings: 3,\n    instructions: \"Cook that shit\",\n    ingredients: [{\n      id: 1,\n      name: \"Ingredient 1\",\n      amount: \"2 lbs\"\n    }]\n  }];\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [search, setSearch] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId);\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n\n  const recipesToShow = () => {\n    // const searchResult = recipes.find((recipe) => {\n    //   recipe.name.toLowerCase() === search.toLowerCase();\n    // });\n    return recipes.find(recipe => {\n      recipe.name.toLowerCase() === search.toLowerCase();\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RecipeList, {\n        recipes: recipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false); // no recipes by that name\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [{\n        id: Date.now().toString(),\n        name: \"\",\n        amount: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => recipesToShow(),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n      value: recipeContextValue,\n      children: selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n        recipe: selectedRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"82UcoO16KSS4RBKKlT0u8pTSmx4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js"],"names":["React","useState","useEffect","RecipeList","RecipeEdit","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","sampleRecipes","name","id","cookTime","servings","instructions","ingredients","amount","selectedRecipeId","setSelectedRecipeId","search","setSearch","recipes","setRecipes","selectedRecipe","find","recipe","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","recipesToShow","toLowerCase","newRecipe","Date","now","toString","newRecipes","index","findIndex","r","filter","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  const sampleRecipes = [\n    {\n      name: \"Recipe 1\",\n      id: 1,\n      cookTime: \"1 hr\",\n      servings: 3,\n      instructions: \"Cook that shit\",\n      ingredients: [\n        {\n          id: 1,\n          name: \"Ingredient 1\",\n          amount: \"2 lbs\",\n        },\n      ],\n    },\n  ];\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [search, setSearch] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe.id === selectedRecipeId\n  );\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  const recipesToShow = () => {\n    // const searchResult = recipes.find((recipe) => {\n    //   recipe.name.toLowerCase() === search.toLowerCase();\n    // });\n    return recipes.find((recipe) => {\n      recipe.name.toLowerCase() === search.toLowerCase();\n    });\n\n    return (\n      <>\n        <RecipeList recipes={recipes} />\n      </>\n    );\n\n    // no recipes by that name\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: Date.now().toString(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <>\n      <div className=\"navbar\">\n        <div className=\"search-wrapper\">\n          <input type=\"text\" onChange={(e) => setSearch(e.target.value)} />\n          <button onClick={() => recipesToShow()}>Search</button>\n        </div>\n      </div>\n      <RecipeContext.Provider value={recipeContextValue}>\n        {/* <RecipeList recipes={recipes} /> */}\n        {/* <Recipe /> */}\n        {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n      </RecipeContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}