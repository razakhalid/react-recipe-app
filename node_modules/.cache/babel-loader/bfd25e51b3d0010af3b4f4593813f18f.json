{"ast":null,"code":"var _jsxFileName = \"/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  _s();\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState(); // const selectedRecipe = recipes.find(\n  //   (recipe) => recipe.id === selectedRecipeId\n  // );\n\n  console.log(recipes);\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [{\n        id: Date.now().toString(),\n        name: \"\",\n        amount: \"\"\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: recipeContexValue,\n    children: [/*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n      recipe: selectedRecipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kTn9f3b4+gg57pgnowCJe+RcnaM=\");\n\n_c = App;\nconst sampleRecipes = [// {\n  //   id: 1,\n  //   name: \"Plain Chicken\",\n  //   servings: 3,\n  //   cookTime: \"1:45\",\n  //   instructions:\n  //     \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n  //   ingredients: [\n  //     {\n  //       id: 1,\n  //       name: \"Chicken\",\n  //       amount: \"2 Pounds\",\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Salt\",\n  //       amount: \"1Tbs\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   id: 2,\n  //   name: \"Plain Pork\",\n  //   servings: 5,\n  //   cookTime: \"0:45\",\n  //   instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\n  //   ingredients: [\n  //     {\n  //       id: 1,\n  //       name: \"Pork\",\n  //       amount: \"3 Pounds\",\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Paprika\",\n  //       amount: \"2 Tbs\",\n  //     },\n  //   ],\n  // },\n];\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/razakhalid/Downloads/my-react-projects/react-recipe-app/src/components/App.js"],"names":["React","useState","useEffect","RecipeList","RecipeEdit","RecipeContext","createContext","LOCAL_STORAGE_KEY","App","selectedRecipeId","setSelectedRecipeId","recipes","setRecipes","console","log","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContexValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","id","newRecipe","Date","now","toString","name","servings","cookTime","instructions","ingredients","amount","recipe","newRecipes","index","findIndex","r","filter","selectedRecipe","sampleRecipes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RecipeList from \"./RecipeList\";\nimport \"../css/App.css\";\nimport RecipeEdit from \"./RecipeEdit\";\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = \"cookingwithReact.recipes\";\n\nfunction App() {\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState();\n  // const selectedRecipe = recipes.find(\n  //   (recipe) => recipe.id === selectedRecipeId\n  // );\n  console.log(recipes);\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) {\n      setRecipes(JSON.parse(recipeJSON));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  const recipeContexValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: \"\",\n      servings: 1,\n      cookTime: \"\",\n      instructions: \"\",\n      ingredients: [\n        {\n          id: Date.now().toString(),\n          name: \"\",\n          amount: \"\",\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContexValue}>\n      <RecipeList recipes={recipes} />\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n    </RecipeContext.Provider>\n  );\n}\n\nconst sampleRecipes = [\n  // {\n  //   id: 1,\n  //   name: \"Plain Chicken\",\n  //   servings: 3,\n  //   cookTime: \"1:45\",\n  //   instructions:\n  //     \"1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken\",\n  //   ingredients: [\n  //     {\n  //       id: 1,\n  //       name: \"Chicken\",\n  //       amount: \"2 Pounds\",\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Salt\",\n  //       amount: \"1Tbs\",\n  //     },\n  //   ],\n  // },\n  // {\n  //   id: 2,\n  //   name: \"Plain Pork\",\n  //   servings: 5,\n  //   cookTime: \"0:45\",\n  //   instructions: \"1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork\",\n  //   ingredients: [\n  //     {\n  //       id: 1,\n  //       name: \"Pork\",\n  //       amount: \"3 Pounds\",\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Paprika\",\n  //       amount: \"2 Tbs\",\n  //     },\n  //   ],\n  // },\n];\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}